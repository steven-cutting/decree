---
name: Upload Python Package

'on':
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ">=0.9.0"

      - name: Verify release version matches project version
        # script verifies that the input string matches the version in the
        # projects pyproject.toml
        run: uv run dev validate-version ${{ github.event.release.name }}

      - name: Build release distributions
        run: |
          # source: https://docs.astral.sh/uv/guides/package
          uv build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly
    # recommended.
    environment:
      name: pypi
      # The PyPI project URL for 'decree' is configured below:
      # URL in the deployment status:
      url: https://pypi.org/p/decree/${{ github.event.release.name }}
      # ALTERNATIVE:
      # If your GitHub Release name is the PyPI project version string,
      # uncomment the following line instead:
      # url: https://pypi.org/project/YOURPROJECT/
      # ${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
